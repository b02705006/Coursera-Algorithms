import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class FastCollinearPoints {
    
    private List<LineSegment> lineSegs = new ArrayList<>();
    private Point[] pointsCopy;
    private int pointLen;
    private LineSegment[] getLineSeg(){
        return lineSegs.toArray(new LineSegment[lineSegs.size()]);
    }
        
    public FastCollinearPoints(Point[] points){         
     // Throw null pointer exception if array is null or any entry is null
        if(points == null || Arrays.asList(points).contains(null)){
            throw new java.lang.NullPointerException();
        }
        else{    
            // Copy the points and record the length
            pointsCopy = points.clone();
            pointLen = pointsCopy.length;
            
            // Sort the copy based on method in Point.java
            Arrays.sort(pointsCopy);
            // Throw illegal argument exception if some points are repeated
            for(int i = 0; i < pointLen - 1; i++){
                if(pointsCopy[i].compareTo(pointsCopy[i + 1]) == 0){
                    throw new java.lang.IllegalArgumentException();
                }
            }
        }
        
    }
    public int numberOfSegments(){
        return 0;
    }
    
    public LineSegment[] segments(){
        return null;
    }
    public static void main(String[] args) {
        

    }

}
